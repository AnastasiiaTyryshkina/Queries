{"version":3,"sources":["components/Navbar.js","components/Hero.js","components/HomeContent.js","components/Home.js","components/Query.js","components/Queries.js","components/QueryAdmin.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","role","aria-label","id","href","Component","Hero","src","width","HomeContent","Home","react","ProductAdmin","state","isEditMode","updatedproductname","_this","props","name","handleProductEdit","event","preventDefault","setState","handleEditSave","handleUpdateProduct","onAddProductNameChange","target","value","_this2","this","isAdmin","onClick","index_es","icon","handleDeleteProduct","type","placeholder","onChange","config","require","Products","newproduct","products","fetchProducts","_callee","res","regenerator_default","wrap","_context","prev","next","axios","get","concat","api","invokeUrl","sent","data","t0","console","log","stop","componentDidMount","length","map","product","Query_ProductAdmin","key","productname","handleAddProduct","params","post","Object","toConsumableArray","_callee2","productToUpdate","updatedProducts","_context2","patch","find","filter","push","_callee3","_context3","delete","_callee4","_context4","objectSpread","onAddProductIdChange","onSubmit","index","Footer","library","add","faEdit","App","BrowserRouter","Navbar_Navbar","Switch","Route","exact","path","component","Queries","QueryAdmin","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4ca1c105.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nexport default class Navbar extends Component {\n  render() {\n    return (\n      <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            <a href=\"/\" className=\"navbar-item\">\n              Домой\n            </a>\n            <a href=\"/queries\" className=\"navbar-item\">\n              Опросы\n            </a>\n            <a href=\"/admin\" className=\"navbar-item\">\n              Добавление(для админа)\n            </a>\n          </div>\n\n          <div className=\"navbar-end\">\n            <div className=\"navbar-item\">\n              <div className=\"buttons\">\n                <a href=\"/register\" className=\"button is-primary\">\n                  <strong>Sign up</strong>\n                </a>\n                <a href=\"/login\" className=\"button is-light\">\n                  Log in\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\n","import React from 'react';\n\nexport default function Hero() {\n  return (\n    <section className=\"hero is-primary\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <img src=\"energy.jpg\" width=\"3000\"/>\n        </div>\n      </div>\n    </section>\n  )\n}","import React from 'react'\n\nexport default function HomeContent() {\n  return (\n    <section className=\"container\">\n    </section>\n  )\n}\n","import React, { Fragment } from 'react';\nimport Hero from './Hero';\nimport HomeContent from './HomeContent';\n\nexport default function Home() {\n  return (\n    <Fragment>\n      <Hero />\n      <HomeContent />\n    </Fragment>\n  )\n}","import React, { Component, Fragment }  from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nexport default class ProductAdmin extends Component {\n\n  state = {\n    isEditMode: false,\n    updatedproductname: this.props.name\n  }\n\n  handleProductEdit = event => {\n    event.preventDefault();\n    this.setState({ isEditMode: true });\n  }\n\n  handleEditSave = event => {\n    event.preventDefault();\n    this.setState({ isEditMode: false });\n    this.props.handleUpdateProduct(this.props.id, this.state.updatedproductname);\n  }\n\n  onAddProductNameChange = event => this.setState({ \"updatedproductname\": event.target.value });\n\n  render() {\n    return (\n      <div className=\"tile is-child box notification is-success\">\n        {\n          this.props.isAdmin && \n          <Fragment>\n            <a href=\"/\" onClick={this.handleProductEdit} className=\"product-edit-icon\">\n              <FontAwesomeIcon icon=\"edit\" />\n            </a>\n            <button onClick={event => this.props.handleDeleteProduct(this.props.id, event)} className=\"delete\"></button>\n          </Fragment>\n        }\n        {\n          this.state.isEditMode \n          ? <div>\n              <p>Edit product name</p>\n              <input \n                className=\"input is-medium\"\n                type=\"text\" \n                placeholder=\"Enter name\"\n                value={this.state.updatedproductname}\n                onChange={this.onAddProductNameChange}\n              />\n              <p className=\"product-id\">id: { this.props.id }</p>\n              <button type=\"submit\" \n                className=\"button is-info is-small\"\n                onClick={ this.handleEditSave }\n              >save</button>\n            </div>\n          : <div>\n              <p className=\"product-title\">{ this.props.name }</p>\n              <p className=\"product-id\">id: { this.props.id }</p>\n            </div>\n        }\n      </div>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport Query from './Query';\nimport axios from \"axios\";\nconst config = require('../config.json');\n\nexport default class Products extends Component {\n\n  state = {\n    newproduct: null,\n    products: []\n  }\n\n  fetchProducts = async () => {\n    // add call to AWS API Gateway to fetch products here\n    // then set them in state\n    try {\n      const res = await axios.get(`${config.api.invokeUrl}/quest`);\n      const products = res.data;\n      this.setState({ products: products });\n    } catch (err) {\n      console.log(`An error has occurred: ${err}`);\n    }\n  }\n\n  componentDidMount = () => {\n    this.fetchProducts();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <section className=\"section\">\n          <div className=\"container\">\n            <h1>Опросы</h1>\n            <p className=\"subtitle is-5\"></p>\n            <br />\n            <div className=\"columns\">\n              <div className=\"column\">\n                <div className=\"tile is-ancestor\">\n                  <div className=\"tile is-4 is-parent  is-vertical\">\n                    { \n                      this.state.products && this.state.products.length > 0\n                      ? this.state.products.map(product => <Query name={product.name} id={product.id} key={product.id} />)\n                      : <div className=\"tile notification is-warning\">No products available</div>\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Fragment>\n    )\n  }\n}","import React, { Component, Fragment } from 'react';\nimport Query from './Query';\nimport axios from \"axios\";\nconst config = require('../config.json');\n\nexport default class ProductAdmin extends Component {\n\n  state = {\n    newproduct: { \n      \"productname\": \"\", \n      \"id\": \"\"\n    },\n    products: []\n  }\n\n  handleAddProduct = async (id, event) => {\n    event.preventDefault();\n    // add call to AWS API Gateway add product endpoint here\n    try {\n      const params = {\n        \"id\": id,\n        \"productname\": this.state.newproduct.productname\n      };\n      await axios.post(`${config.api.invokeUrl}/products/${id}`, params);\n      this.setState({ products: [...this.state.products, this.state.newproduct] });\n      this.setState({ newproduct: { \"productname\": \"\", \"id\": \"\" }});\n    }catch (err) {\n      console.log(`An error has occurred: ${err}`);\n    }\n  }\n\n  handleUpdateProduct = async (id, name) => {\n    // add call to AWS API Gateway update product endpoint here\n    try {\n      const params = {\n        \"id\": id,\n        \"productname\": name\n      };\n      await axios.patch(`${config.api.invokeUrl}/products/${id}`, params);\n      const productToUpdate = [...this.state.products].find(product => product.id === id);\n      const updatedProducts = [...this.state.products].filter(product => product.id !== id);\n      productToUpdate.productname = name;\n      updatedProducts.push(productToUpdate);\n      this.setState({products: updatedProducts});\n    }catch (err) {\n      console.log(`Error updating product: ${err}`);\n    }\n  }\n\n  handleDeleteProduct = async (id, event) => {\n    event.preventDefault();\n    // add call to AWS API Gateway delete product endpoint here\n    try {\n      await axios.delete(`${config.api.invokeUrl}/products/${id}`);\n      const updatedProducts = [...this.state.products].filter(product => product.id !== id);\n      this.setState({products: updatedProducts});\n    }catch (err) {\n      console.log(`Unable to delete product: ${err}`);\n    }\n  }\n\n  fetchProducts = async () => {\n    // add call to AWS API Gateway to fetch products here\n    // then set them in state\n    try {\n      const res = await axios.get(`${config.api.invokeUrl}/products`);\n      const products = res.data;\n      this.setState({ products: products });\n    } catch (err) {\n      console.log(`An error has occurred: ${err}`);\n    }\n  }\n\n  onAddProductNameChange = event => this.setState({ newproduct: { ...this.state.newproduct, \"productname\": event.target.value } });\n  onAddProductIdChange = event => this.setState({ newproduct: { ...this.state.newproduct, \"id\": event.target.value } });\n\n  componentDidMount = () => {\n    this.fetchProducts();\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <section className=\"section\">\n          <div className=\"container\">\n            <h1>Product Admin</h1>\n            <p className=\"subtitle is-5\">Add and remove products using the form below:</p>\n            <br />\n            <div className=\"columns\">\n              <div className=\"column is-one-third\">\n                <form onSubmit={event => this.handleAddProduct(this.state.newproduct.id, event)}>\n                  <div className=\"field has-addons\">\n                    <div className=\"control\">\n                      <input \n                        className=\"input is-medium\"\n                        type=\"text\" \n                        placeholder=\"Enter name\"\n                        value={this.state.newproduct.productname}\n                        onChange={this.onAddProductNameChange}\n                      />\n                    </div>\n                    <div className=\"control\">\n                      <input \n                        className=\"input is-medium\"\n                        type=\"text\" \n                        placeholder=\"Enter id\"\n                        value={this.state.newproduct.id}\n                        onChange={this.onAddProductIdChange}\n                      />\n                    </div>\n                    <div className=\"control\">\n                      <button type=\"submit\" className=\"button is-primary is-medium\">\n                        Add product\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n              <div className=\"column is-two-thirds\">\n                <div className=\"tile is-ancestor\">\n                  <div className=\"tile is-4 is-parent  is-vertical\">\n                    { \n                      this.state.products.map((product, index) => \n                        <Query \n                          isAdmin={true}\n                          handleUpdateProduct={this.handleUpdateProduct}\n                          handleDeleteProduct={this.handleDeleteProduct} \n                          name={product.productname} \n                          id={product.id}\n                          key={product.id}\n                        />)\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Fragment>\n    )\n  }\n}\n","import React from 'react'\n\nexport default function Footer() {\n  return (\n    <footer className=\"footer\">\n      <div className=\"content has-text-centered\">\n        <p>\n            17.Б11-ПУ ПМ-ПУ\n        </p>\n      </div>\n    </footer>\n  )\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Queries from './components/Queries';\nimport QueryAdmin from './components/QueryAdmin';\nimport Footer from './components/Footer';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faEdit } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faEdit);\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Router>\n          <div>\n            <Navbar />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/queries\" component={Queries} />\n              <Route exact path=\"/admin\" component={QueryAdmin} />\n            </Switch>\n            <Footer />\n          </div>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}